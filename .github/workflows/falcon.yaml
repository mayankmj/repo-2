name: Falcon API Request
on:
  push:
    branches:
      - main
permissions:
  id-token: write 
  contents: read 
jobs:
  request:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Make Falcon API Request
      id: falcon
      env:
        FALCON_CLIENT_ID: ${{secrets.FALCON_CLIENT_ID}}
        FALCON_CLIENT_SECRET: ${{secrets.FALCON_CLIENT_SECRET}}
        FALCON_CID: ${{secrets.FALCON_CID}}
      run: |
        LATEST_SENSOR=$(FALCON_CLIENT_ID=$FALCON_CLIENT_ID \
                        FALCON_CLIENT_SECRET=$FALCON_CLIENT_SECRET \
                        FALCON_CID=$FALCON_CID \
                        bash <(curl -Ls https://github.com/CrowdStrike/falcon-scripts/releases/latest/download/falcon-container-sensor-pull.sh) \
                        -t falcon-container | tail -1)
        echo "LATEST_SENSOR=$LATEST_SENSOR" >> $GITHUB_OUTPUT

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
        aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1 
          # Logging to AWS
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #         role-to-assume: arn:aws:iam::201431874166:role/acs-sso-dev-oidcsrole
    #         role-session-name: "acsdevrolesession"
    #         aws-region: us-east-1
    
    - name: Fetching the ecr image tag
      id: check-ecr-image
      uses: mnmandahalf/check-ecr-image-exists@v0.1.5
      with:
          region: us-east-1
          repository-name: "acs-sso-javapoc-dev-ecr"
          image-tag: ${{steps.falcon.outputs.LATEST_SENSOR}}
          # image-tag: "7.18.0-5704.container.x86_64.Release.US-1"
  
    - name: Perform other action based on the output
      run: |
        if [[ "${{ steps.check-ecr-image.outputs.image-exists }}" == "1" ]]; then 
          echo "Version  match"
          exit 1 
        else 
          echo "does not match"
        fi
    - name: Fetch latest ECR image tag
      id: fetch_tag
      run: |
          REPOSITORY_NAME="acs-sso-amapi-dev-ecr"  
          IMAGE_TAG=$(aws ecr list-images --repository-name $REPOSITORY_NAME --query 'imageIds[0].imageTag' --output text)
          echo "Latest image tag is $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Use latest image tag
      run: |
          echo "Using image tag: ${{ env.IMAGE_TAG }}"
        
  update-secret:
   runs-on: ubuntu-latest
   steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create or update Github Actions secret
      uses: ekowcharles/update-github-actions-secret@v1
      env:
        OWNER: mayankmj
        REPOSITORY: repo-2
        ACCESS_TOKEN: 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
        SECRET_NAME: FALCON_LATEST_VERSION
        SECRET_VALUE: "123"
 
  approval:
    runs-on: ubuntu-latest
    needs: ['request']
    environment:
      name: stage
    steps:
      - name: Request Approval
        run: echo "Approval job approved"





          





    # - name: Fetch Latest ECR Image Tag
    #   id: get_tag
    #   run: |
    #     REPO_NAME="falcon-sensor/falcon-container"
    #     LATEST_TAG=$(aws ecr describe-images \
    #       --repository-name $REPO_NAME \
    #       --query 'imageDetails | sort_by(@, &imagePushedAt) | [-1].imageTags[0]' \
    #       --output text)
    #     echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
    #     echo "::set-output name=latest_tag::$LATEST_TAG"
    #     # Set the fetched tag as an output
    # - name: Echo Latest ECR Image Tag
    #   run: |
    #     echo "Latest ECR Image Tag: ${{ needs.fetch_tag.outputs.latest_tag }}"
    # - name: Send Email Notification
    #   if: env.VERSION_MATCH != 'Versions match'
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: sandbox.smtp.mailtrap.io
    #     server_port: 587
    #     subject: "Version did not match , Please re-upload the latest falcon image in ecr"
    #     body: "The latest sensor version is $LATEST_SENSOR , Please update."
    #     to: mayankjohari877@gmail.com 
    #     from: Mayank
    # - name: Print Latest Sensor Version
    #   run: |
    #     echo "The latest sensor version is $LATEST_SENSOR"
