name: My Target Workflow

on:
  push:

jobs:
  approval:
    runs-on: ubuntu-latest
    environment: stage  # Define the environment for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Create a text file with "Hello World" content
      - name: Create test file
        run: echo hello World > test.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: test.txt

      - name: Use Custom Action to Delete Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: my-artifact

  timeout:
    runs-on: ubuntu-latest
    steps:
      - name: Check approval status
        id: check-approval
        uses: actions/github-script@v6
        with:
          script: |
            // Check if the approval job was approved
            const run = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'main.yml',  // Update with your workflow file name
              status: 'in_progress'
            });
            const currentRun = run.data.workflow_runs.find(run => run.id === context.runId);
            if (currentRun && currentRun.conclusion !== 'success') {
              throw new Error('Approval job not approved!');
            }

      - name: Wait for 24 hours
        run: sleep 30  # Sleeps for 24 hours (86400 seconds)

      - name: Cancel workflow if not approved
        if: ${{ steps.check-approval.outcome == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { id: runId } } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            await github.rest.actions.cancelWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });
