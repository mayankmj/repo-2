name: My Target Workflow

on:
  push:

jobs:
  approval:
    runs-on: ubuntu-latest
    environment: stage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create test file
        run: echo "hello World" > test.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: test.txt

      - name: Use Custom Action to Delete Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: my-artifact

  timeout:
    runs-on: ubuntu-latest

    steps:
      - name: Set start time
        id: set_start_time
        run: echo "##[set-output name=start_time]$(date +%s)"

      - name: Wait for 15 seconds
        run: sleep 15s
      
      - name: Install node-fetch
        run: npm install node-fetch


      - name: Check approval status
        # if: ${{ failure() }}  # Execute only if the previous step failed (timeout)
        run: |
          echo "Approval job status check after timeout"
          echo "Initiating cancellation of the workflow run..."

          # Obtain necessary details for the cancellation
          export OWNER=$GITHUB_REPOSITORY_OWNER
          export REPO=$GITHUB_REPOSITORY
          export RUN_ID=$GITHUB_RUN_ID

          # Execute JavaScript to cancel the workflow run
          node - <<EOF
          const fetch = require('node-fetch');

          async function cancelWorkflowRun(owner, repo, runId, accessToken) {
            try {
              const apiUrl = \`https://api.github.com/repos/\${owner}/\${repo}/actions/runs/\${runId}/cancel\`;
              const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                  'Authorization': \`token \${accessToken}\`,
                  'Accept': 'application/vnd.github.v3+json'
                }
              });

              if (!response.ok) {
                const errorData = await response.json();
                throw new Error(\`Failed to cancel workflow run: \${errorData.message}\`);
              }

              console.log('Workflow run cancellation request submitted successfully:', response.status);
              return response.status;
            } catch (error) {
              console.error('Error occurred while canceling workflow run:', error.message);
              throw error;
            }
          }

          // Example usage
          const owner = '${{ github.repository_owner }}';
          const repo = '${{ github.repository }}';
          const runId = ${GITHUB_RUN_ID};
          const accessToken = '${{ secrets.GITHUB_TOKEN }}'; // or your personal access token

          cancelWorkflowRun(owner, repo, runId, accessToken)
            .then(() => {
              console.log('Workflow run cancellation initiated successfully.');
              process.exit(0);
            })
            .catch((error) => {
              console.error('Failed to initiate workflow run cancellation:', error);
              process.exit(1);
            });
          EOF

          exit 1  # Exit with an error code to force cancel the workflow
